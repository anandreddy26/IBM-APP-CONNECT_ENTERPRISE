

CREATE COMPUTE MODULE EventCaptureMsgFlw_Compute
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		-- CALL CopyMessageHeaders();
		-- CALL CopyEntireMessage();
		
		SET OutputRoot.DFDL.EventCaptureAppMsg.record.AppName = InputRoot.XMLNSC.*:event.*:eventPointData.*:messageFlowData.*:application.*:name;
		SET OutputRoot.DFDL.EventCaptureAppMsg.record.FlowName = InputRoot.XMLNSC.*:event.*:eventPointData.*:messageFlowData.*:messageFlow.*:name;
		SET OutputRoot.DFDL.EventCaptureAppMsg.record.NodeName = InputRoot.XMLNSC.*:event.*:eventPointData.*:messageFlowData.*:node.*:nodeLabel;
		SET OutputRoot.DFDL.EventCaptureAppMsg.record.Terminal = InputRoot.XMLNSC.*:event.*:eventPointData.*:messageFlowData.*:node.*:terminal;
		SET OutputRoot.DFDL.EventCaptureAppMsg.record.EventName = InputRoot.XMLNSC.*:event.*:eventPointData.*:eventData.*:eventIdentity.*:eventName;
		SET OutputRoot.DFDL.EventCaptureAppMsg.record.Counter = InputRoot.XMLNSC.*:event.*:eventPointData.*:eventData.*:eventSequence.*:counter;
		RETURN TRUE;
	END;

	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;

	CREATE PROCEDURE CopyEntireMessage() BEGIN
		SET OutputRoot = InputRoot;
	END;
END MODULE;
